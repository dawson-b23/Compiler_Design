#DRBC VarK Local isArray = true,  child[0] exisits,  varKind = Local
#DRBC  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]
#DRBC .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 11]
#DRBC .   .   Child: 0  Var: a of array of type char [mem: Local loc: -3 size: 4] [line: 12]
#DRBC .   .   .   Child: 0  Const "arm" of array of type char [mem: Global loc: -1 size: 4] [line: 12]
#DRBC                                               Note: The next 2 lines ae for Local only. {LocalStatic, Parameter, and Global} do nothing
#DRBC LDC  3,3(6)     load size of array a          VarK varKind=Local isArray
#DRBC  ST  3,-2(1)    save size of array a          VarK varKind=Local isArray
#DRBC                                               Note: if isArray and child[0] exists, they all do the following lines.
#DRBC LIT  "arm"                                    -> child[0]
#DRBC LDA  3,-1(0)    Load address of char array    VarK isArray (with a child[0])
#DRBC LDA  4,-3(1)    address of lhs                VarK isArray (with a child[0])
#DRBC  LD  5,1(3)     size of rhs                   VarK isArray (with a child[0])
#DRBC  LD  6,1(4)     size of lhs                   VarK isArray (with a child[0])
#DRBC SWP  5,6,6      pick smallest size            VarK isArray (with a child[0])
#DRBC MOV  4,3,5      array op =                    VarK isArray (with a child[0])
main() {
   char a[3]:"arm";
}
