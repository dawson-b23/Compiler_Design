#DRBC BreakK: 
#DRBC Func: main returns type void [mem: Global loc: 0 size: -2] [line: 12]
#DRBC .   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 12]
#DRBC .   .   Child: 1  While [line: 13]
#DRBC .   .   .   Child: 0  Const true of type bool [line: 13]
#DRBC .   .   .   Child: 1  Break [line: 14]
#DRBC * WHILE                                               WhileK:
#DRBC LDC  3,1(6)     Load Boolean constant                 WhileK:
#DRBC JNZ  3,1(7)     Jump to while part                    WhileK:
#DRBC * DO                                                  WhileK:
#DRBC * BREAK                                               BreakK:
#DRBC JMP  7,-2(7)    break                                 BreakK:
#DRBC JMP  7,-5(7)    go to beginning of loop               WhileK:
#DRBC JMP  7,2(7)     Jump past loop [backpatch]            WhileK:
#DRBC * END WHILE                                           WhileK:


main(){
   while(true) do
      break;
}

