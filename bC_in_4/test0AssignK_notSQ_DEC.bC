#DRBC AssignK lhs->attr.op != '[' , attr.op = DEC

#DRBC Sibling: 7  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
#DRBC .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
#DRBC .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 5]
#DRBC .   .   Child: 1  Assign: -- of type int [line: 6]
#DRBC .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]

#DRBC * EXPRESSION                                 Comment printed before every ExpK
#DRBC                                              AssignK TreeNode *rhs, *lhs; lhs = currnode->child[0]; rhs = currnode->child[1];
#DRBC                                              AssignK: remaining line are if isArray == false 
#DRBC                                              AssignK int offReg = offsetRegister(lhs->varKind)
#DRBC   
#DRBC   LD  3,-2(1)  load lhs variable i     ->child[rhs] // if it exists  
#DRBC   LDA  3,-1(3) decrement value of i    AssignK when attr.op is DEC
#DRBC   ST  3,-2(1)  Store variable i        AssignK when attr.op is DEC

main(){
   int i;
   i--;
}
