#DRBC AssignK lhs->attr.op != '[' , attr.op = SUBASS
#DRBC Sibling: 7  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]
#DRBC .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
#DRBC .   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
#DRBC .   .   Child: 1  Assign: -= of type int [line: 5]
#DRBC .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 5]
#DRBC .   .   .   Child: 1  Const 10 of type int [line: 5] 

#DRBC * EXPRESSION                                   Comment printed before every ExpK   
#DRBC                                              AssignK TreeNode *rhs, *lhs; lhs = currnode->child[0]; rhs = currnode->child[1];
#DRBC                                              AssignK: remaining line are if isArray == false 
#DRBC                                              AssignK int offReg = offsetRegister(lhs->varKind)
#DRBC         
#DRBC      LDC  3,10(6) Load integer constant       ->child[rhs] // if it exists 
#DRBC      LD  4,-2(1)  load lhs variable x         AssignK when attr.op is SUBASS 
#DRBC      SUB  3,4,3     op -=                        AssignK when attr.op is SUBASS 
#DRBC      ST  3,-2(1)  Store variable x            AssignK when attr.op is SUBASS 
   

main(){
  int x; 
  x -= 10; 
}
